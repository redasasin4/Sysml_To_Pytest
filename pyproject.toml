[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sysml2pytest"
version = "0.1.0"
description = "Convert SysML V2 requirements into executable pytest tests with property-based testing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "sysml2pytest contributors"},
]
maintainers = [
    {name = "sysml2pytest contributors"},
]
keywords = [
    "sysml",
    "sysml-v2",
    "pytest",
    "testing",
    "requirements",
    "property-based-testing",
    "hypothesis",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Code Generators",
]

dependencies = [
    "pytest>=7.0.0",
    "hypothesis>=6.0.0",
    "requests>=2.28.0",
    "jinja2>=3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest-cov>=4.0.0",
    "pytest-html>=3.1.0",
    "pytest-metadata>=2.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
sysml2pytest = "sysml2pytest.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/sysml2pytest"
Documentation = "https://github.com/yourusername/sysml2pytest#readme"
Repository = "https://github.com/yourusername/sysml2pytest"
Issues = "https://github.com/yourusername/sysml2pytest/issues"

[tool.hatch.build.targets.wheel]
packages = ["sysml2pytest"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=sysml2pytest",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "requirement(id, name, version): mark test to trace to a SysML V2 requirement",
]

[tool.coverage.run]
source = ["sysml2pytest"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 100
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports
"tests/*" = ["E501"]  # line too long in tests

[tool.ruff.isort]
known-first-party = ["sysml2pytest"]
